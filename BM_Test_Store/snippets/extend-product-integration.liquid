<script>

    // Run scripts on DOMContentLoaded to avoid affecting site load time
    window.addEventListener('DOMContentLoaded', function () {

        // Checks if Extend lives in the window and the active currency is USD before showing Extend offers
        if (window.Extend && window.ExtendShopify && window.Shopify && window.Shopify.currency && window.Shopify.currency.active === 'USD' && window.meta.page.pageType == 'product') {

            /************************/
            /* Initial Variables    */
            /************************/
            // No Product Form, variants are determined by a jQuery option selection
            const $productForm = $('.product-dropdown__list'); // Change this to the product form element
            let $selection = $productForm.find('option:selected'); // Current selection
            let isFormBtn = window.location.href.indexOf("/bear-original-mattress") > -1 == true;
            const addToCartButton = isFormBtn ?  
            document.querySelector('section.product product-form form button')
            :
            document.querySelector('section.product .product-buy__button_add_on')
            // Change this to the Add-To-Cart element
            const productCategory = (meta && meta.product) ? meta.product.type : null;
            const extendOffer = document.createElement('div');
            const extendUtils = window.Extend.integration.utils;
            const extendLogger = extendUtils.logger;

            extendOffer.className = 'extend-offer';
            document.querySelector('.cs-bonus-wrapper').after(extendOffer);
            extendOffer.style.display = 'none';

            /************************/
            /* QA Cypress Variables */
            /************************/
            window.Extend.integration.pdpProductForm = $productForm;
            window.Extend.integration.pdpAddToCartButton = addToCartButton;
            window.Extend.integration.pdpExtendOffer = extendOffer;

            /************************/
            /* initProductOffer     */
            /************************/
            // Initializes product offers and handles ATC button functionality for the main PDP ATC
            function initProductOffer() {
                try {
                    extendLogger({ $productForm, addToCartButton, extendOffer });

                    // Fail safes
                    if (!$productForm || !addToCartButton || !extendOffer) {
                        throw new Error("Exiting - missing $productForm, addToCartButton, or extendOffer")
                    }

                    // Check if product is an extend warranty, if so disable the atc
                    function isExtend() {
                        if (meta.product && meta.product.vendor === 'Extend') {
                            addToCartButton.disabled = true;
                        }
                    }

                    // Checks if product is an Extend warranty and if so disables
                    isExtend();

                    // Grabs the variantId from the $productForm and renders the initial offers for it
                    let variantId = $productForm.val();
                    extendLogger(variantId);

                    // Grabs the product price from the metadata
                    let productPrice = '' + $selection.data().price + '00';

                    // Renders Extend offer
                    Extend.buttons.render(extendOffer, { referenceId: variantId, price: productPrice, category: productCategory });

                    // Listens for changes to the $productForm and sets the activeProduct for extend via variantID
                    $productForm.on('change', function () {
                        extendOffer.removeAttribute('style');
                        $selection = $productForm.find('option:selected');
                        variantId = $productForm.val();
                        extendLogger(variantId);
                        if (variantId) {
                            productPrice = '' + $selection.data().price + '00';
                            Extend.setActiveProduct(extendOffer, { referenceId: variantId, price: productPrice, category: productCategory });
                            isExtend();
                        }
                    });

                    // click simulation handling add to cart
                    function handleAddToCart(e) {
                        e.preventDefault();
                        e.stopImmediatePropagation();

                        const quantity = 1;
                        ExtendShopify.handleAddToCart(extendOffer, {
                            quantity: quantity,
                            modal: false,
                            done: function () {

                                // Trigger Analytics
                                if (window.Extend.integration.analytics)
                                    window.Extend.integration.productAnalytics(variantId, quantity);

                                // remove default click listener
                                addToCartButton.removeEventListener('click', handleAddToCart, true);

                                // click atc button
                                $(addToCartButton).trigger('click');

                                // add default click listener back
                                addToCartButton.addEventListener('click', handleAddToCart, true);
                            }
                        });
                    }

                    // run handleCaddtoCart when we click ATC, capturing event
                    addToCartButton.addEventListener('click', handleAddToCart, true);
                } catch (error) {
                    console.error("EXTEND:", error)
                }
            }

            // Initial product offer render
            if (!Extend.buttons.instance(extendOffer)) {
                initProductOffer();
            }
        }

    })
</script>

<style>
    .extend-offer {
        padding-bottom: 5px;
    }
</style>